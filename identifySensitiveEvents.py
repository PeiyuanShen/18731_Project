# grep_output.txt is generated by running the following linux grep command on the target web application code repository:
# grep -orn "\w*[rR]epository.save\w*\|\w*[rR]epository.delete\w*" ./lancie-api > output.txt

input_file = open('grep_output.txt', 'r')
matches = input_file.readlines()

for match in matches:
    match_javafile_path = match.split(":")[0]
    if "Impl.java" not in match_javafile_path:
        continue
    match_line_index = match.split(":")[1]
    match_keyword = match.split(":")[2]
    javafile = open(match_javafile_path, 'r')
    javalines = javafile.readlines()
    source = match_keyword[0 : match_keyword.find("Repository")]

    for search_line_index in range(int(match_line_index) - 2, 0, -1):
        search_line = javalines[search_line_index]
        if "public " in search_line:
            def isMethodName(str):
                return '(' in str
            def isMethodNameEnd(str):
                return '(' in str
            methodName = filter(isMethodName, search_line.split(" "))[0].split("(")[0]
            returnType = search_line.split(" ")[5]
            leftParenthesisIndex = search_line.find("(")
            rightParenthesisIndex = search_line.find(")")
            arguments = search_line[leftParenthesisIndex + 1: rightParenthesisIndex].split(", ")
            argumentTypes = []
            for argument in arguments:
                argumentTypes.append(argument.split(" ")[0])
            break

    print(match_javafile_path[2: -5] + ": " + methodName + "(" + ', '.join(argumentTypes) + ")" + " -> " + returnType)
